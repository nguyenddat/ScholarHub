services:
  db:
    container_name: scholarhub_db
    image: postgres
    volumes:
      - ./database/data:/var/lib/postgresql/data
    env_file:
      - ./database/.env
    ports:
      - "8001:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fast_api

  neo4j:
    container_name: scholarhub-neo4j
    image: neo4j:5
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      NEO4J_AUTH: neo4j/password123
    volumes:
      - ./graph_database/data:/data
      - ./graph_database/import:/import
      - ./graph_database/plugins:/plugins
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7474"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - fast_api

  backend:
    container_name: scholarhub_backend
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/backend
      - ./backend/requirements.txt:/backend/requirements.txt
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c", "./wait-for-db.sh uvicorn main:app --host 0.0.0.0 --port 8000 --reload"]
    networks:
      - fast_api
  
  frontend:
    container_name: scholarhub_frontend
    build:
      context: ./frontend
    env_file:
      - ./frontend/.env
    ports:
      - "8002:3000"
    depends_on:
      backend:
        condition: service_started
    restart: always
    command: ["pnpm", "dev", "--host", "--port", "3000"]
    networks:
      - fast_api
    
networks:
  fast_api:
    driver: bridge